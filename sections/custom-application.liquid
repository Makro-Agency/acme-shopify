
{{ 'custom-application.css' | asset_url | stylesheet_tag }}

<div class="custom-wholesale-application">
    <div class="section-heading">
        <h1>WHOLESALE APPLICATION</h1>
        <p>Interested in becoming a wholesale customer? Please fill out the application form below and we will get back to you shortly.</p>
    </div>
    <div class="custom-application-form">
        <form action="#" id="wholesale-form">
            <!-- First & Last Name Side-by-Side -->
            <div class="two-column">
                <div class="two-column-inner">
                    <fieldset class="form-fieldset">
                        <legend class="required">First Name</legend>
                        <input type="text" id="first-name" name="first_name" class="form-control" placeholder="First Name" required>
                    </fieldset>
                    <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
                </div>
                <div class="two-column-inner">
                    <fieldset class="form-fieldset">
                        <legend class="required">Last Name</legend>
                        <input type="text" id="last-name" name="last_name" class="form-control" placeholder="Last Name" required>
                    </fieldset>
                    <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
                </div>
            </div>

            <!-- Email -->
            <fieldset class="form-fieldset">
                <legend class="required">Email</legend>
                <input type="email" id="email" name="email" class="form-control" placeholder="Email" required>
            </fieldset>
            <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>

            <!-- Name of Business -->
            <fieldset class="form-fieldset">
                <legend class="required">Name of Your Business</legend>
                <input type="text" id="business-name" name="business_name" class="form-control" placeholder="Name of your business" required>
            </fieldset>
            <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
            
            <!-- Tax ID/EIN Number -->
            <fieldset class="form-fieldset">
                <legend class="required">Tax ID/EIN Number</legend>
                <input type="text" id="tax-id" name="tax_id" class="form-control" placeholder="Tax ID/EIN Number" required>
            </fieldset>
            <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
            
            <!-- Shipping Address -->
            <fieldset class="form-fieldset">
                <legend class="required">Your Shipping Address</legend>
                <input type="text" id="address" name="address" class="form-control" placeholder="Your Shipping Address" required>
            </fieldset>
            <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
            
            <!-- ZIP Code -->
            <fieldset class="form-fieldset">
                <legend class="required">ZIP Code</legend>
                <input type="text" id="zip-code" name="zip_code" class="form-control" placeholder="ZIP Code" required>
            </fieldset>
            <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
            
            <fieldset class="form-fieldset dropdown">
                <legend class="required">Country</legend>
                <select class="hide">{{ all_country_option_tags }}</select>
                <div class="custom-dropdown" data-form-dropdwon-active>
                    <div class="selected-option">Please Select</div>
                    <div class="dropdown-arrow">
                        {% render 'custom-dropdown-icon' %}
                    </div>
                    <div class="dropdown-options">
                      {{ all_country_option_tags | replace:'<option>','<li>' | replace:'</option>','</li>' }}
                        <div class="option" data-value="Afghanistan">Afghanistan</div>
                        <div class="option" data-value="Aland Islands">Ã…land Islands</div>
                        <div class="option" data-value="Albania">Albania</div>
                        <div class="option" data-value="Algeria">Algeria</div>
                        <div class="option" data-value="Andorra">Andorra</div>
                    </div>
                </div>
            </fieldset>
            <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
            <fieldset class="form-fieldset dropdown">
                <legend class="required">State</legend>
                <div class="custom-dropdown" data-input-id="state-value">
                    <div class="selected-option">Please Select</div>
                    <!-- SVG arrow rendered from your snippet -->
                    <div class="dropdown-arrow">
                        {% render 'custom-dropdown-icon' %}
                    </div>
                    <div class="dropdown-options">
                        <div class="option" data-value="California">California</div>
                        <div class="option" data-value="Texas">Texas</div>
                        <div class="option" data-value="New York">New York</div>
                        <div class="option" data-value="Florida">Florida</div>
                        <div class="option" data-value="Other">Other</div>
                        <!-- Add more options as needed -->
                    </div>
                </div>
                <input type="hidden" id="state-value" name="state" value="">
            </fieldset>
            <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
            
            <!-- City -->
            <fieldset class="form-fieldset">
                <legend class="required">City</legend>
                <input type="text" id="city" name="city" class="form-control" placeholder="City" required>
            </fieldset>
            <div class="error-message" style="display:none"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
            
            <!-- Country Code & Phone Number Side-by-Side -->
            <div class="two-column last-fields">
                <div class="two-column-inner country-code">
                    <fieldset class="form-fieldset country-code">
                        <legend class="required">Country Code</legend>
                        <input type="text" id="country-code" name="country_code" class="form-control" placeholder="+" required>
                    </fieldset>
                    <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
                </div>
                <div class="two-column-inner">
                    <fieldset class="form-fieldset">
                        <legend class="required">Phone Number</legend>
                        <input type="text" id="phone-number" name="phone_number" class="form-control" placeholder="(___) ___-____" required>
                    </fieldset>
                    <div class="error-message" style="display: none;"> <span class="error-icon"> {% render 'custom-error' %}</span> THIS FIELD IS REQUIRED</div>
                </div>
            </div>
            <div class="checkbox-group">
                <label class="custom-checkbox-container">
                    <input type="checkbox" name="agree_terms" required>
                    <span class="checkmark"></span>
                    <span class="checkbox-label">
                    I Agree to the <a href="#" class="conditions">Terms and Conditions </a>
                    <span class="required-asterisk">*</span>
                    </span>
                </label>
            </div>
            <button type="submit" class="btn-submit">SUBMIT</button>
            
        </form>
        <div class="custom-wholesale-application success hide">
          <div class="success-container" id="success-container">
              <div class="success-icon">
                  {% render 'success-message' %}
              </div>
              <h1 class="success-title">THANK YOU!</h1>
              <p class="success-message">The form has been successfully submitted</p>
              <a href="#" class="go-back-button" onclick="goBack()">GO BACK</a>
          </div>
      </div>
    </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {

    document.addEventListener("click",function(e){
      // console.log(e.currentTarget);
      var _hearAboutActive = e.target.hasAttribute('data-form-dropdwon-active');
      if( e.target.closest('[data-tag]') != null && e.target.hasAttribute('data-value') ){
        let value = e.target.getAttribute("data-value");
        var _hearAboutSelect = document.querySelector(e.target.closest('[data-tag]').getAttribute('data-tag'));
        var _appednActiveText = e.target.closest('[data-form-dropdwon-wrapper]').querySelector('[data-form-dropdwon-active]');      
        if(_hearAboutSelect){
          _hearAboutSelect.value = value;
          _hearAboutSelect.closest('.field').classList.remove('error');
        } 
        if(_appednActiveText) _appednActiveText.innerText = e.target.innerText;
        
        let provines = e.target.getAttribute("data-provinces") || null;
        var appendEle = e.target.closest('[data-province-append]') != null ? document.querySelector(e.target.closest('[data-province-append]').getAttribute('data-province-append')) : null;
        if( provines != null && provines.length > 2 ){
          console.log( JSON.parse(provines),'provines', provines.length );
          var provinesJSON = JSON.parse(provines);
          var _option = '', _li = '', _ul = document.createElement("ul"), _div = document.createElement("div");
          for(var i = 0; i < provinesJSON.length; i++){          
            _option = _option + `<option value="${provinesJSON[i][0]}">${provinesJSON[i][0]}</option>`;
            _li = _li + `<li data-value="${provinesJSON[i][0]}">${provinesJSON[i][0]}</li>`;
          }        
          appendEle.innerHTML = _option;
          appendEle.value = '';
          appendEle.closest('[data-form-dropdwon-wrapper]').querySelector('.field-select-active').innerText = 'Please Select';
          appendEle.closest('[data-form-dropdwon-wrapper]').querySelector('ul').innerHTML = _li;
          appendEle.closest('[data-form-dropdwon-wrapper]').classList.remove('hidden');
        }else{
          if( appendEle ){
            console.log('appendEle',appendEle);
            appendEle.closest('[data-form-dropdwon-wrapper]').classList.add('hidden');
            appendEle.value = '';
          }
        }
      }
      if(_hearAboutActive){
        var _hearAboutWrap = e.target.closest('[data-form-dropdwon-wrapper]');
        if(_hearAboutWrap.classList.contains("active")){
          _hearAboutWrap.classList.remove("active");
        }else{        
          document.querySelectorAll('[data-form-dropdwon-wrapper].active').forEach(function(ele, eleIndex, eleArray){
            ele.classList.remove('active');
          });
          _hearAboutWrap.classList.add("active");
        }
      }
      if( !_hearAboutActive && document.querySelector('[data-form-dropdwon-wrapper].active') != null ){
        document.querySelectorAll('[data-form-dropdwon-wrapper].active').forEach(function(ele, eleIndex, eleArray){
          ele.classList.remove('active');
        });
      }
    });

    // Since you might have multiple custom dropdowns on the page (Country, State, etc.),
    // itâ€™s best to query all of them:
    var dropdowns = document.querySelectorAll('.custom-dropdown');

    dropdowns.forEach(function(dropdown) {
      var selectedOption = dropdown.querySelector('.selected-option');
      var options = dropdown.querySelectorAll('.option');

      // Toggle dropdown open/close when clicking the selected option area
      selectedOption.addEventListener('click', function(e) {
        e.stopPropagation();
        dropdown.classList.toggle('active');
      });

      // Update the selected text and hidden input when an option is clicked
      options.forEach(function(option) {
        option.addEventListener('click', function(e) {
          var value = this.getAttribute('data-value');
          selectedOption.textContent = this.textContent;

          // If a hidden input is linked via a data attribute on the dropdown, update its value
          var hiddenInputId = dropdown.getAttribute('data-input-id');
          if (hiddenInputId) {
            document.getElementById(hiddenInputId).value = value;
          }
          dropdown.classList.remove('active');
        });
      });
    });

    // Close any open dropdown if a click occurs outside
    document.addEventListener('click', function(e) {
      dropdowns.forEach(function(dropdown) {
        if (!dropdown.contains(e.target)) {
          dropdown.classList.remove('active');
        }
      });
    });

    document.querySelectorAll('.custom-application-form form *[required]').forEach(function(ele, eleIndex, eleArray){
      ele.addEventListener("focus", inputFunction);
      ele.addEventListener("blur", inputFunction);    
    });

    var form = document.getElementById('wholesale-form');

    form.addEventListener('submit', function(e) {
      //clearErrors();
      e.preventDefault();

      {% comment %} document.querySelector('.wholesaeFro-wrapper .contact__button .contact-from-btn').classList.add('loading');
      document.querySelector('.wholesaeFro-wrapper .contact__button .contact-from-btn .loading-overlay__spinner').classList.remove('hidden'); {% endcomment %}

      form.classList.add('hide');
      form.closest(".custom-application-form").querySelector(".custom-wholesale-application.success").classList.remove('hide');

      {% comment %} var url = form.getAttribute('action');    
      var config = fetchConfig('javascript');
      delete config.headers['Content-Type'];
      config.headers['Accept'] = '/';
      var formData = new FormData(form);
      config.body = formData;
      fetch(`${url}`, config)
      .then((response) => response.json())
      .then((response) => {
        if (response.status) {
          window.scrollTo({top: 0, behavior: 'smooth'});
          form.classList.add('hide');
          form.closest(".custom-application-form").querySelector(".custom-wholesale-application.success").classList.remove('hide');
          // setTimeout(function(){
          //   location.reload();
          // },1000);
        }
      })
      .catch(e => {
        console.error(e);
      }); {% endcomment %}
    });
  });

  function inputFunction(event){
    if( event.target.value == '' ){
      var fieldset = event.target.closest('.form-fieldset');
      if (fieldset) {
        var errorDiv = fieldset.nextElementSibling;
        if (errorDiv && errorDiv.classList.contains('error-message')) {
          errorDiv.style.display = 'block';
        }
      }
    }else{
      if( event.target.type == "email" && !validateEmail(event.target.value) ){
        
        var fieldset = event.target.closest('.form-fieldset');
        if (fieldset) {
          var errorDiv = fieldset.nextElementSibling;
          if (errorDiv && errorDiv.classList.contains('error-message')) {
            errorDiv.style.display = 'block';
          }
        }
      }else {
        if( event.target.closest('.form-fieldset') && event.target.closest('.form-fieldset').nextElementSibling.classList.contains('error-message') ){
          event.target.closest('.form-fieldset').nextElementSibling.style.display = 'none';
        }
      }
    }
  }

  function validateEmail(mail) {
    if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(mail)){
      return (true);
    }    
    return (false);
  }

  // Utility function to clear error styling/message for all fields
  function clearErrors() {
    var errorFieldsets = form.querySelectorAll('.form-fieldset.error');
    errorFieldsets.forEach(function(fs) {
      fs.classList.remove('error');
    });
    var errorMessages = form.querySelectorAll('.error-message');
    errorMessages.forEach(function(msg) {
      msg.style.display = 'none';
    });
  }
</script>

{% schema %}
{
  "name": "Custom Application",
  "settings": [],
  "presets": [
    {
      "name": "Custom Application"
    }
  ]
}
{% endschema %}