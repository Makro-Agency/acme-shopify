<div class="cart__submit-controls">
	{% if customer and customer.b2b? and customer.company_available_locations_count > 0 and customer.current_company.metafields.custom.block_checkout == true %}
		<style>
			.prevent-msg{
				display: flex;
				padding: 8px 16px;
				align-items: center;
				gap: 10px;
				align-self: stretch;
				border-radius: 4px;
				background: rgba(235, 28, 31, 0.05);
			}
			.prevent-msg .svg-icon{
				width: 16px;
				height: 16px;
				display: flex;
			}
			.prevent-msg .msg-text{
				color: #EB1C1F;
				font-family: ITCClearfaceRegular;
				font-size: 14px;
				font-style: normal;
				font-weight: 400;
				line-height: 150%; /* 21px */
			}

			.prevent-msg .msg-text a{
				color: #EB1C1F;
				font-family: ITCClearfaceRegular;
				font-size: 14px;
				font-style: normal;
				font-weight: 550;
				line-height: 150%;
				text-decoration-line: underline;
				text-decoration-style: solid;
				text-decoration-skip-ink: auto;
				text-decoration-thickness: auto;
				text-underline-offset: auto;
				text-underline-position: from-font;
			}

			@media(max-width:575px){
				.prevent-msg{
					padding: 8px 12px;
					align-items: flex-start;
					gap: 8px;
				}
			}
		</style>

		{% comment %} <div class="prevent-msg">
			<span class="svg-icon">
				<svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
					<g clip-path="url(#clip0_161_249)">
					<path d="M8 14.5C11.3137 14.5 14 11.8137 14 8.5C14 5.18629 11.3137 2.5 8 2.5C4.68629 2.5 2 5.18629 2 8.5C2 11.8137 4.68629 14.5 8 14.5Z" stroke="#EB1C1F" stroke-miterlimit="10"/>
					<path d="M8 9V5.5" stroke="#EB1C1F" stroke-linecap="round" stroke-linejoin="round"/>
					<path d="M8 12C8.41421 12 8.75 11.6642 8.75 11.25C8.75 10.8358 8.41421 10.5 8 10.5C7.58579 10.5 7.25 10.8358 7.25 11.25C7.25 11.6642 7.58579 12 8 12Z" fill="#EB1C1F"/>
					</g>
					<defs>
					<clipPath id="clip0_161_249">
					<rect width="16" height="16" fill="white" transform="translate(0 0.5)"/>
					</clipPath>
					</defs>
				</svg>
			</span>
			<span class="msg-text">
				{{ section.settings.prevent_msg }}*
			</span>
		</div> {% endcomment %}

		<div class="cart-checkout-error col-error">
			<div class="wrapper font-itc">
				{% render 'icon-warning' %} 
				<span>{{ section.settings.prevent_msg | replace:'<p>' | replace:'</p>' }}</span>
			</div>
		</div>
		<input type="button" class="btn btn-primary mt-4 mb-0 cart__submit disabled" value="{{ 'cart.buttons.checkout' | t }}">
	{% else %}
		{% comment %} <input type="submit" name="update"
		class="btn mt-0 mb-0 btn-primary cart__submit "
		value="{{ 'cart.buttons.update' | t }}" 
		data-btn-cart-update > {% endcomment %}
		{% comment %} {% if customer.b2b? and customer.company_available_locations_count > 0 %}
			<input type="button" class="btn btn-primary mt-4 mb-0 cart__submit" onclick="submitForm();"
				value="{{ 'cart.buttons.checkout' | t }}">
		{% endif %} {% endcomment %}
		{% comment %} <input type="submit" name="checkout"
		class="btn btn-primary mt-4 mb-0 cart__submit {% if customer.b2b? and customer.company_available_locations_count > 0 %}hide{% endif %}"
		value="{{ 'cart.buttons.checkout' | t }}"
		data-btn-cart-submit> {% endcomment %}
		<input type="submit" name="checkout"
			class="btn btn-primary mt-4 mb-0 cart__submit"
			value="{{ 'cart.buttons.checkout' | t }}"
			data-btn-cart-submit>
	{% endif %}
</div>

{% if customer.b2b? and customer.company_available_locations_count > 0 %}
	<style>
	#birdchime-slots-box{display:none;}
	</style>
{% endif %}

<script>

	function observeSlotsBox() {
		const slotsBox = document.querySelector("#birdchime-slots-box");
	
		if (slotsBox) {
			// Stop polling once the element is found
			clearInterval(checkExistInterval);
	
			const observer = new MutationObserver(() => {
				clearTimeout(observer.debounceTimer); // Clear any previous timers
				observer.debounceTimer = setTimeout(() => {
					const checkoutBtn = document.querySelector(`input[name=checkout]`);
					if (checkoutBtn) {
						const newBtn = checkoutBtn.cloneNode(true);
						checkoutBtn.replaceWith(newBtn);
					}
				}, 1500);
			});
	
			observer.observe(slotsBox, { childList: true, subtree: true });
		}
	}
	
	
	{% if customer.b2b? and customer.company_available_locations_count > 0 %}
	const checkExistInterval = setInterval(observeSlotsBox, 500);
	{% endif %}
</script>


